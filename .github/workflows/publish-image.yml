name: Publish Docker image
on:
  release:
    types: [published]
env:
  FRONTEND_IMAGE_NAME: osscs_web
  BACKEND_IMAGE_NAME: osscs
jobs:
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    name: Push Docker image to GitHub Packages
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Build frontend image
        run: cd ./osscs-web && docker build . --file Dockerfile --tag $FRONTEND_IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}"
      - name: Build backend image
        run: cd ./osscs && docker build . --file Dockerfile --tag $BACKEND_IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}"
      - name: Log in to registry
        # This is where you will update the PAT to GITHUB_TOKEN
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Push image
        run: |
          FRONTEND_IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$FRONTEND_IMAGE_NAME
          BACKEND_IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$BACKEND_IMAGE_NAME

          # Change all uppercase to lowercase
          FRONTEND_IMAGE_ID=$(echo $FRONTEND_IMAGE_ID | tr '[A-Z]' '[a-z]')
          BACKEND_IMAGE_ID=$(echo $BACKEND_IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest
          echo FRONTEND_IMAGE_ID=$FRONTEND_IMAGE_ID
          echo BACKEND_IMAGE_ID=$BACKEND_IMAGE_ID
          echo VERSION=$VERSION
          docker tag $FRONTEND_IMAGE_NAME $FRONTEND_IMAGE_ID:$VERSION
          docker tag $BACKEND_IMAGE_NAME $BACKEND_IMAGE_ID:$VERSION
          docker push $FRONTEND_IMAGE_ID:$VERSION
          docker push $BACKEND_IMAGE_ID:$VERSION